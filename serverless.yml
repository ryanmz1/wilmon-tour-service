service:
  name: wilmon-travel-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-2
  profile: dev-sls
  environment:
    WILMON_TRAVELS_TABLE: ${self:custom.WilmonTravelsTable.name}
    TRAVEL_PLACES_TABLE: ${self:custom.TravelPlacesTable.name}
    REDIS_HOST: ${file(secrets.yml):Redis.host}
    REDIS_PORT: ${file(secrets.yml):Redis.port}
    REDIS_PWD: ${file(secrets.yml):Redis.password}
    PLACE_IDS_SET: 'TravelPlacesIds'

resources:
  Resources:
    WilmonTravelsTable: ${file(resources/WilmonTravelsTable.yml):Table}
    TravelPlacesTable: ${file(resources/TravelPlacesTable.yml):Table}
    CreateTravelLambdaRole: ${file(resources/roles/CreateTravelLambdaRole.yml):Role}
    GetTravelsLambdaRole: ${file(resources/roles/GetTravelsLambdaRole.yml):Role}
    AutoGenarateTravelsRole: ${file(resources/roles/AutoGenarateTravelsRole.yml):Role}

functions:
  getTravels:
    handler: src/handlers/getTravels.handler
    role: GetTravelsLambdaRole
    events:
      - http:
          method: GET
          path: /travels
          cors: true
          authorizer: ${self:custom.authorizer}
  createTravel:
    handler: src/handlers/createTravel.handler
    role: CreateTravelLambdaRole
    events:
      - http:
          method: POST
          path: /travel
          authorizer: ${self:custom.authorizer}
  autoGenarateTravel:
    handler: src/handlers/autoGenarateTravel.handler
    role: AutoGenarateTravelsRole

custom:
  authorizer:
    #arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/${self:provider.region}_HZe4H4pAn
    arn: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:wilmon-travel-auth-service-${self:provider.stage}-auth
  WilmonTravelsTable:
    name: !Ref WilmonTravelsTable
    arn: !GetAtt WilmonTravelsTable.Arn
  TravelPlacesTable:
    name: !Ref TravelPlacesTable
    arn: !GetAtt TravelPlacesTable.Arn
  bundle:
    linting: false
